<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{27fcd5e7-e6aa-43a1-932b-605a5ab6dbcf}</ProjectGuid>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <Name>PunkOS.Boot</Name>
    <BinFormat>Bin</BinFormat>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <Profile>VMware</Profile>
    <!-- Looks like this was a mispelled attribute. Replaced by DebugEnabled below.
    <DebugEnable>true</DebugEnable>
    -->
    <DebugEnabled>True</DebugEnabled>
    <DebugMode>Source</DebugMode>
    <TraceMode>User</TraceMode>
    <EnableGDB>False</EnableGDB>
    <StartCosmosGDB>false</StartCosmosGDB>
    <VMWareEdition>Player</VMWareEdition>
    <OutputPath>C:\Users\kaleb\Desktop\DEV\PunkOS\Debug\</OutputPath>
    <Name>VMware User 001</Name>
    <Description>Use VMware Player or Workstation to deploy and debug.</Description>
    <Deployment>ISO</Deployment>
    <Launch>VMware</Launch>
    <VisualStudioDebugPort>Pipe: Cosmos\Serial</VisualStudioDebugPort>
    <VMware_Name>VMware User 001</VMware_Name>
    <VMware_Description>Use VMware Player or Workstation to deploy and debug.</VMware_Description>
    <VMware_Deployment>ISO</VMware_Deployment>
    <VMware_Launch>VMware</VMware_Launch>
    <VMware_DebugEnabled>True</VMware_DebugEnabled>
    <VMware_DebugMode>Source</VMware_DebugMode>
    <VMware_VisualStudioDebugPort>Pipe: Cosmos\Serial</VMware_VisualStudioDebugPort>
    <VMware_VMwareEdition>Player</VMware_VMwareEdition>
    <VMware_OutputPath>C:\Users\kaleb\Desktop\DEV\PunkOS\Debug\</VMware_OutputPath>
    <VMware_EnableGDB>False</VMware_EnableGDB>
    <VMware_StartCosmosGDB>false</VMware_StartCosmosGDB>
    <IntelEdison_Name>PunkOSBoot</IntelEdison_Name>
    <IntelEdison_Description>Connect to Intel Edison device to deploy and debug.</IntelEdison_Description>
    <IntelEdison_Deployment>BinaryImage</IntelEdison_Deployment>
    <IntelEdison_Launch>IntelEdison</IntelEdison_Launch>
    <IntelEdison_DebugEnabled>True</IntelEdison_DebugEnabled>
    <IntelEdison_DebugMode>Source</IntelEdison_DebugMode>
    <IntelEdison_VisualStudioDebugPort>Pipe: Cosmos\Serial</IntelEdison_VisualStudioDebugPort>
    <IntelEdison_VMwareEdition>Player</IntelEdison_VMwareEdition>
    <IntelEdison_OutputPath>bin\Debug\</IntelEdison_OutputPath>
    <IntelEdison_EnableGDB>False</IntelEdison_EnableGDB>
    <IntelEdison_StartCosmosGDB>false</IntelEdison_StartCosmosGDB>
    <ISO_Name>PunkOSBoot</ISO_Name>
    <ISO_Description>Creates a bootable ISO image which can be burned to a DVD. After running the selected project, an explorer window will open containing the ISO file. The ISO file can then be burned to a CD or DVD and used to boot a physical or virtual system.</ISO_Description>
    <ISO_Deployment>ISO</ISO_Deployment>
    <ISO_Launch>None</ISO_Launch>
    <ISO_DebugEnabled>False</ISO_DebugEnabled>
    <ISO_DebugMode>Source</ISO_DebugMode>
    <ISO_VisualStudioDebugPort>Pipe: Cosmos\Serial</ISO_VisualStudioDebugPort>
    <ISO_VMwareEdition>Player</ISO_VMwareEdition>
    <ISO_OutputPath>C:\Users\kaleb\Desktop\DEV\PunkOS\Debug\</ISO_OutputPath>
    <ISO_EnableGDB>False</ISO_EnableGDB>
    <ISO_StartCosmosGDB>false</ISO_StartCosmosGDB>
    <USB_Name>PunkOSBoot</USB_Name>
    <USB_Description>Makes a USB device such as a flash drive or external hard disk bootable.</USB_Description>
    <USB_Deployment>USB</USB_Deployment>
    <USB_Launch>None</USB_Launch>
    <USB_DebugEnabled>False</USB_DebugEnabled>
    <USB_DebugMode>Source</USB_DebugMode>
    <USB_VisualStudioDebugPort>Pipe: Cosmos\Serial</USB_VisualStudioDebugPort>
    <USB_VMwareEdition>Player</USB_VMwareEdition>
    <USB_OutputPath>C:\Users\kaleb\Desktop\DEV\PunkOS\Debug\</USB_OutputPath>
    <USB_EnableGDB>False</USB_EnableGDB>
    <USB_StartCosmosGDB>false</USB_StartCosmosGDB>
    <StackCorruptionDetectionEnabled>True</StackCorruptionDetectionEnabled>
    <ISO_StackCorruptionDetectionEnabled>True</ISO_StackCorruptionDetectionEnabled>
    <VMware_StackCorruptionDetectionEnabled>True</VMware_StackCorruptionDetectionEnabled>
    <USB_StackCorruptionDetectionEnabled>True</USB_StackCorruptionDetectionEnabled>
    <PXE_StackCorruptionDetectionEnabled>True</PXE_StackCorruptionDetectionEnabled>
    <PXE_Name>PunkOSBoot</PXE_Name>
    <PXE_Description>Creates a PXE setup and hosts a DCHP and TFTP server to deploy directly to physical hardware. Allows debugging with a serial cable.</PXE_Description>
    <PXE_Deployment>PXE</PXE_Deployment>
    <PXE_Launch>None</PXE_Launch>
    <PXE_DebugEnabled>False</PXE_DebugEnabled>
    <PXE_DebugMode>Source</PXE_DebugMode>
    <PXE_VisualStudioDebugPort>Pipe: Cosmos\Serial</PXE_VisualStudioDebugPort>
    <PXE_VMwareEdition>Player</PXE_VMwareEdition>
    <PXE_OutputPath>bin\Debug\</PXE_OutputPath>
    <PXE_EnableGDB>False</PXE_EnableGDB>
    <PXE_StartCosmosGDB>false</PXE_StartCosmosGDB>
    <User001_StackCorruptionDetectionEnabled>True</User001_StackCorruptionDetectionEnabled>
    <User001_Name>Bit</User001_Name>
    <User001_Deployment>BinaryImage</User001_Deployment>
    <User001_Launch>VMware</User001_Launch>
    <User001_DebugEnabled>true</User001_DebugEnabled>
    <User001_DebugMode>Source</User001_DebugMode>
    <User001_VisualStudioDebugPort>Pipe: Cosmos\Serial</User001_VisualStudioDebugPort>
    <User001_VMwareEdition>Player</User001_VMwareEdition>
    <User001_OutputPath>bin\Debug\</User001_OutputPath>
    <User001_EnableGDB>False</User001_EnableGDB>
    <User001_StartCosmosGDB>false</User001_StartCosmosGDB>
    <IntelEdison_StackCorruptionDetectionEnabled>True</IntelEdison_StackCorruptionDetectionEnabled>
    <IgnoreDebugStubAttribute>False</IgnoreDebugStubAttribute>
    <User001_Description>Use VMware Player or Workstation to deploy and debug.</User001_Description>
    <User001_IgnoreDebugStubAttribute>False</User001_IgnoreDebugStubAttribute>
    <VMware_IgnoreDebugStubAttribute>False</VMware_IgnoreDebugStubAttribute>
    <IntelEdison_IgnoreDebugStubAttribute>False</IntelEdison_IgnoreDebugStubAttribute>
    <ISO_IgnoreDebugStubAttribute>False</ISO_IgnoreDebugStubAttribute>
    <PXE_IgnoreDebugStubAttribute>False</PXE_IgnoreDebugStubAttribute>
    <USB_IgnoreDebugStubAttribute>False</USB_IgnoreDebugStubAttribute>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Cosmos.Core.Plugs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=5ae71220097cb983" />
    <Reference Include="Cosmos.System.Plugs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=5ae71220097cb983" />
    <Reference Include="Cosmos.Debug.Kernel.Plugs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=5ae71220097cb983" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\PunkOS\PunkOS.csproj">
      <Name>PunkOS</Name>
      <Project>{ceb4e26c-ac73-4a53-8262-2fe8cbcae423}</Project>
      <Private>True</Private>
    </ProjectReference>
  </ItemGroup>
  <!--<ItemGroup>
    <Content Include="Cosmos.bxrc">
      <SubType>Content</SubType>
    </Content>
  </ItemGroup>-->
  <Import Project="$(MSBuildExtensionsPath)\Cosmos\Cosmos.targets" />
</Project>